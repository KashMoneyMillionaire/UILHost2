// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace UILHost.Web.Controllers
{
    public partial class MeetController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected MeetController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Hosted()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Hosted);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Run()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Run);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public MeetController Actions { get { return MVC.Meet; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Meet";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Meet";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Hosted = "Hosted";
            public readonly string Participating = "Participating";
            public readonly string Run = "Run";
            public readonly string Add = "Add";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Hosted = "Hosted";
            public const string Participating = "Participating";
            public const string Run = "Run";
            public const string Add = "Add";
        }


        static readonly ActionParamsClass_Hosted s_params_Hosted = new ActionParamsClass_Hosted();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Hosted HostedParams { get { return s_params_Hosted; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Hosted
        {
            public readonly string sortDate = "sortDate";
        }
        static readonly ActionParamsClass_Run s_params_Run = new ActionParamsClass_Run();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Run RunParams { get { return s_params_Run; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Run
        {
            public readonly string id = "id";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Add s_params_Add = new ActionParamsClass_Add();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Add AddParams { get { return s_params_Add; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Add
        {
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Add = "Add";
                public readonly string Hosted = "Hosted";
                public readonly string Participating = "Participating";
                public readonly string Run = "Run";
            }
            public readonly string Add = "~/Views/Meet/Add.cshtml";
            public readonly string Hosted = "~/Views/Meet/Hosted.cshtml";
            public readonly string Participating = "~/Views/Meet/Participating.cshtml";
            public readonly string Run = "~/Views/Meet/Run.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_MeetController : UILHost.Web.Controllers.MeetController
    {
        public T4MVC_MeetController() : base(Dummy.Instance) { }

        [NonAction]
        partial void HostedOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime? sortDate);

        [NonAction]
        public override System.Web.Mvc.ActionResult Hosted(System.DateTime? sortDate)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Hosted);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "sortDate", sortDate);
            HostedOverride(callInfo, sortDate);
            return callInfo;
        }

        [NonAction]
        partial void ParticipatingOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Participating()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Participating);
            ParticipatingOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RunOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, long id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Run(long id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Run);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            RunOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void RunOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, UILHost.Web.Models.EditMeetViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Run(UILHost.Web.Models.EditMeetViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Run);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            RunOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void AddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Add()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Add);
            AddOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, UILHost.Web.Models.NewMeetViewModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult Add(UILHost.Web.Models.NewMeetViewModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Add);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            AddOverride(callInfo, model);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
